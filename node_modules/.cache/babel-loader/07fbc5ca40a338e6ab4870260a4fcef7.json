{"ast":null,"code":"var _jsxFileName = \"/home/developer/Repos/proyectos/criptomoneda_react_hooks/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: white;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after{\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n  useEffect(() => {\n    const cotizarCriptomoneda = async () => {\n      //evitar la ejecucion la primera vez\n      if (moneda === '') return; //consultar la API para obtener la cotizacion\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url); //mostrando el spinner\n\n      guardarCargando(true); //ocultar el spinner y mostrar el resultado\n\n      setTimeout(() => {\n        //cambiar el estado de cargando\n        guardarCargando(false); //guardar cotizacion\n\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    };\n\n    cotizarCriptomoneda();\n  }, [moneda, criptomoneda]);\n  const componente = cargando ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(Cotizacion, {\n    resultado: resultado,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 49\n    }\n  });\n  return /*#__PURE__*/React.createElement(Contenedor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Imagen, {\n    src: imagen,\n    alt: \"Imagen Crypto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Cotiza criptomonedas al instante\"), /*#__PURE__*/React.createElement(Formulario, {\n    guardarMoneda: guardarMoneda,\n    guardarCriptomoneda: guardarCriptomoneda,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), componente));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/developer/Repos/proyectos/criptomoneda_react_hooks/src/App.js"],"names":["React","useState","useEffect","styled","axios","imagen","Formulario","Cotizacion","Spinner","Contenedor","div","Imagen","img","Heading","h1","App","moneda","guardarMoneda","criptomoneda","guardarCriptomoneda","resultado","guardarResultado","cargando","guardarCargando","cotizarCriptomoneda","url","get","setTimeout","data","DISPLAY","componente"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,MAAMC,UAAU,GAAGN,MAAM,CAACO,GAAI;;;;;;;;CAA9B;AASA,MAAMC,MAAM,GAAGR,MAAM,CAACS,GAAI;;;CAA1B;AAIA,MAAMC,OAAO,GAAGV,MAAM,CAACW,EAAG;;;;;;;;;;;;;;;;CAA1B;;AAkBA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,YAAD,EAAeC,mBAAf,IAAsClB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACmB,SAAD,EAAYC,gBAAZ,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,QAAD,EAAWC,eAAX,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAE,MAAM;AAEf,UAAMsB,mBAAmB,GAAG,YAAY;AACtC;AACA,UAAGR,MAAM,KAAK,EAAd,EAAkB,OAFoB,CAItC;;AACA,YAAMS,GAAG,GAAI,+DAA8DP,YAAa,UAASF,MAAO,EAAxG;AACA,YAAMI,SAAS,GAAG,MAAMhB,KAAK,CAACsB,GAAN,CAAUD,GAAV,CAAxB,CANsC,CAQtC;;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf,CATsC,CAWtC;;AAEAI,MAAAA,UAAU,CAAE,MAAM;AAEhB;AACAJ,QAAAA,eAAe,CAAC,KAAD,CAAf,CAHgB,CAKhB;;AACAF,QAAAA,gBAAgB,CAACD,SAAS,CAACQ,IAAV,CAAeC,OAAf,CAAuBX,YAAvB,EAAqCF,MAArC,CAAD,CAAhB;AACD,OAPS,EAOP,IAPO,CAAV;AAUD,KAvBD;;AAwBAQ,IAAAA,mBAAmB;AAEpB,GA5BQ,EA4BN,CAACR,MAAD,EAASE,YAAT,CA5BM,CAAT;AA8BA,QAAMY,UAAU,GAAIR,QAAD,gBAAa,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,gBAA2B,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C;AAEA,sBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,MAAD;AACI,IAAA,GAAG,EAAEf,MADT;AAEI,IAAA,GAAG,EAAC,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADH,eAEG,oBAAC,UAAD;AACE,IAAA,aAAa,EAAEY,aADjB;AAEE,IAAA,mBAAmB,EAAEE,mBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAOIW,UAPJ,CAPF,CADD;AAoBD;;AAED,eAAef,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from '@emotion/styled'\nimport axios from 'axios'\nimport imagen from './cryptomonedas.png'\nimport Formulario from './components/Formulario'\nimport Cotizacion from './components/Cotizacion'\nimport Spinner from './components/Spinner'\n\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: white;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after{\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`\n\nfunction App() {\n\n  const [moneda, guardarMoneda] = useState('')\n  const [criptomoneda, guardarCriptomoneda] = useState('')\n  const [resultado, guardarResultado] = useState({})\n  const [cargando, guardarCargando] = useState(false)\n\n  useEffect( () => {\n\n    const cotizarCriptomoneda = async () => {\n      //evitar la ejecucion la primera vez\n      if(moneda === '') return;\n\n      //consultar la API para obtener la cotizacion\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`\n      const resultado = await axios.get(url)\n\n      //mostrando el spinner\n      guardarCargando(true)\n\n      //ocultar el spinner y mostrar el resultado\n\n      setTimeout( () => {\n\n        //cambiar el estado de cargando\n        guardarCargando(false)\n\n        //guardar cotizacion\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda])\n      }, 3000)\n\n\n    }\n    cotizarCriptomoneda()\n\n  }, [moneda, criptomoneda])\n\n  const componente = (cargando) ? <Spinner /> : <Cotizacion resultado={resultado}/>\n\n  return (\n   <Contenedor>\n     <div>\n        <Imagen\n            src={imagen}\n            alt=\"Imagen Crypto\"\n        />\n     </div>\n     <div>\n        <Heading>Cotiza criptomonedas al instante</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n        \n     </div>\n   </Contenedor>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}