{"ast":null,"code":"var _jsxFileName = \"/home/developer/Repos/proyectos/criptomoneda_react_hooks/src/components/Formulario.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport Error from './Error';\nimport useMoneda from '../hooks/useMoneda';\nimport useCriptomoneda from '../hooks/useCriptomoneda';\nimport Axios from 'axios';\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #66a2fe;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: white;\n    transition: background-color 3s ease;\n\n    &:hover{\n        background-color: #326ac0;\n        cursor: pointer;\n    }\n`;\n\nconst Formulario = ({\n  guardarMoneda,\n  guardarCriptomoneda\n}) => {\n  //State del listado de criptomonedas\n  const [listaCripto, guardarCriptomonedas] = useState([]);\n  const [error, guardarError] = useState(false); //Arreglo de Monedas\n\n  const MONEDAS = [{\n    codigo: 'MXN',\n    nombre: 'Peso Mexicano'\n  }, {\n    codigo: 'USD',\n    nombre: 'Dolar de Estados Unidos'\n  }, {\n    codigo: 'EUR',\n    nombre: 'Euro'\n  }, {\n    codigo: 'GBP',\n    nombre: 'Libra Esterlina'\n  }]; // Utilizar useMoneda\n\n  const [moneda, SelectMonedas] = useMoneda('Elije tu Moneda', '', MONEDAS); //Utilizar useCryptomoneda\n\n  const [cripto, SelectCripto] = useCriptomoneda('Elije tu Criptomoneda', '', listaCripto); //Ejecutar llamado a la API\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`;\n      const resultado = await Axios.get(url);\n      guardarCriptomonedas(resultado.data.Data);\n    };\n\n    consultarAPI();\n  }, []); //cuando el usuario hace submit\n\n  const cotizarMoneda = e => {\n    e.preventDefault(); //validar su ambos campos estan llenos\n\n    if (moneda === '' || cripto === '') {\n      guardarError(true);\n      return;\n    } //pasar los datos a otro componente\n\n\n    guardarError(false);\n    guardarMoneda(moneda);\n    guardarCriptomoneda(cripto);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: cotizarMoneda,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, error ? /*#__PURE__*/React.createElement(Error, {\n    mensaje: \"Todos los campos son obligatorios!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }\n  }) : null, /*#__PURE__*/React.createElement(SelectMonedas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SelectCripto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Boton, {\n    type: \"submit\",\n    value: \"Calcular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["/home/developer/Repos/proyectos/criptomoneda_react_hooks/src/components/Formulario.js"],"names":["React","useEffect","useState","styled","Error","useMoneda","useCriptomoneda","Axios","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listaCripto","guardarCriptomonedas","error","guardarError","MONEDAS","codigo","nombre","moneda","SelectMonedas","cripto","SelectCripto","consultarAPI","url","resultado","get","data","Data","cotizarMoneda","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;;;;;;;;;;;;;;;;CAA3B;;AAkBA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAA0C;AAEzD;AACA,QAAM,CAACC,WAAD,EAAcC,oBAAd,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,KAAD,EAAQC,YAAR,IAAwBd,QAAQ,CAAC,KAAD,CAAtC,CAJyD,CAOzD;;AACA,QAAMe,OAAO,GAAG,CACZ;AAACC,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GADY,EAEZ;AAACD,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAFY,EAGZ;AAACD,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAHY,EAIZ;AAACD,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAJY,CAAhB,CARyD,CAezD;;AACA,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0BhB,SAAS,CAAC,iBAAD,EAAoB,EAApB,EAAwBY,OAAxB,CAAzC,CAhByD,CAkBzD;;AACA,QAAM,CAACK,MAAD,EAASC,YAAT,IAAyBjB,eAAe,CAAC,uBAAD,EAA0B,EAA1B,EAA8BO,WAA9B,CAA9C,CAnByD,CAqBzD;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,YAAY,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAI,yEAAb;AACA,YAAMC,SAAS,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUF,GAAV,CAAxB;AAEAX,MAAAA,oBAAoB,CAACY,SAAS,CAACE,IAAV,CAAeC,IAAhB,CAApB;AACH,KALD;;AAMAL,IAAAA,YAAY;AACf,GARQ,EAQN,EARM,CAAT,CAtByD,CAgCzD;;AACA,QAAMM,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAGvB;;AACA,QAAGZ,MAAM,KAAK,EAAX,IAAiBE,MAAM,KAAK,EAA/B,EAAmC;AAC/BN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH,KAPsB,CASvB;;;AACAA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAL,IAAAA,aAAa,CAACS,MAAD,CAAb;AACAR,IAAAA,mBAAmB,CAACU,MAAD,CAAnB;AACH,GAbD;;AAeA,sBACI;AACI,IAAA,QAAQ,EAAEQ,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKf,KAAK,gBAAG,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA4D,IAJtE,eAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAQI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAUI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAiBH,CAjED;;AAmEA,eAAeL,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styled from '@emotion/styled'\nimport Error from './Error'\nimport useMoneda from '../hooks/useMoneda'\nimport useCriptomoneda from '../hooks/useCriptomoneda'\nimport Axios from 'axios';\n\n\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #66a2fe;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: white;\n    transition: background-color 3s ease;\n\n    &:hover{\n        background-color: #326ac0;\n        cursor: pointer;\n    }\n`\n\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\n\n    //State del listado de criptomonedas\n    const [listaCripto, guardarCriptomonedas] = useState([])\n    const [error, guardarError] = useState(false)\n\n\n    //Arreglo de Monedas\n    const MONEDAS = [\n        {codigo: 'MXN', nombre: 'Peso Mexicano'},\n        {codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\n        {codigo: 'EUR', nombre: 'Euro'},\n        {codigo: 'GBP', nombre: 'Libra Esterlina'}\n    ]\n\n    // Utilizar useMoneda\n    const [moneda, SelectMonedas] = useMoneda('Elije tu Moneda', '', MONEDAS)\n\n    //Utilizar useCryptomoneda\n    const [cripto, SelectCripto] = useCriptomoneda('Elije tu Criptomoneda', '', listaCripto)\n\n    //Ejecutar llamado a la API\n    useEffect(() => {\n        const consultarAPI = async () => {\n            const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`\n            const resultado = await Axios.get(url)\n\n            guardarCriptomonedas(resultado.data.Data)\n        }\n        consultarAPI()\n    }, [])\n\n    //cuando el usuario hace submit\n    const cotizarMoneda = e => {\n        e.preventDefault()\n\n        //validar su ambos campos estan llenos\n        if(moneda === '' || cripto === '') {\n            guardarError(true)\n            return\n        }\n\n        //pasar los datos a otro componente\n        guardarError(false)\n        guardarMoneda(moneda)\n        guardarCriptomoneda(cripto)\n    }\n\n    return ( \n        <form\n            onSubmit={cotizarMoneda}\n        >\n\n            {error ? <Error mensaje=\"Todos los campos son obligatorios!\" /> : null}\n\n            <SelectMonedas/>\n\n            <SelectCripto/>\n\n            <Boton\n                type=\"submit\"\n                value=\"Calcular\"\n            />\n        </form>\n     );\n}\n \nexport default Formulario;"]},"metadata":{},"sourceType":"module"}